# docker-compose.yml

services:
    
  ollama:
    # Build from your custom Dockerfile (which COPYs ./.ollama into /root/.ollama)
    build:
      context: ./ollama-custom        # <- folder that has Dockerfile and .ollama/
      dockerfile: Dockerfile
    image: agent-ollama-i:2025-09-08  # tag the result so it's easy to reference/save
    container_name: agent-ollama-c
    restart: unless-stopped
    ports: ["11434:11434"]
    environment:
      OLLAMA_KEEP_ALIVE: "24h"
    #gpus: all

  # backend:
  #     build:
  #       context: ./backend
  #       dockerfile: Dockerfile
  #     container_name: agent-backend-c
  #     restart: unless-stopped
  #     ports: ["2024:2024"]
  #     environment:
  #       OLLAMA_HOST: http://ollama:11434
  #       PORT: "2024"
  #       PYTHONPATH: /app/src
  #     command: >
  #       /opt/venv/bin/langgraph dev
  #       --config ./langgraph.json
  #       --host 0.0.0.0
  #       --port ${PORT:-2024}
  #       --allow-blocking
  #       --no-browser
  #     volumes:
  #       - ./backend:/app # Bind mount: live sync local changes to container (enables hot reload)
  backend:
      build:
        context: ./backend
        dockerfile: Dockerfile
      image: agent-backend-i:2025-09-08  # tag the result so it's easy to reference/save
      container_name: agent-backend-c
      restart: unless-stopped
      ports:
        - "2024:2024"
      environment:
        OLLAMA_HOST: http://ollama:11434
        PORT: "2024"   # optional; overrides the Dockerfile default
      # No volumes: image is fully self-contained
      
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: agent-frontend-c
    image: agent-frontend-i:2025-09-08
    restart: unless-stopped
    ports: ["3003:3003"]
    environment:
      NODE_ENV: development
      NEXT_TELEMETRY_DISABLED: "1"
    command: >
      pnpm dev -p 3003 -H 0.0.0.0
    volumes:
      - ./frontend:/app # Bind mount: Source code hot-reload
      - frontend_node_modules:/app/node_modules # Prevents your local node_modules (if it exists) from overriding the container's node_modules
      - frontend_next_cache:/app/.next # Preserves Next.js build cache between container restarts. Speeds up subsequent builds and hot reloads

volumes:
  frontend_node_modules: 
  frontend_next_cache:


